#summary Describes the points of configuration for CR_Documentor.
#labels Phase-Deploy

= Opening the Options Window =
You may configure options for CR_Documentor behavior.  To get to the CR_Documentor options window:

  * In Visual Studio .NET, select the "!DevExpress" menu, then "Options."
  * In the tree-view on the left, find the "Tool Windows" folder.
  * Inside the "Tool Windows" folder, select "Documentor." The available options for CR_Documentor will be displayed.

http://cr-documentor.googlecode.com/svn/site/screenshots/options_dialog.png

= Available Options =

  * *Documentation Tag Compatibility*: This option allows you to choose which XML documentation tags are recognized.
    * _Sandcastle_ (default): Recognize the tags supported by the Sandcastle documentation renderer. This is a superset of the Microsoft tags, but a subset of NDoc 1.3.
    * _NDoc 1.3_: Recognize the tags outlined for use by NDoc 1.3, which is a superset of the Microsoft tags.
    * _Microsoft Tags_: Recognize only the tags outlined in the Microsoft developer documentation about inline XML doc.
  * *Unrecognized Tag Handling*:
    * _Strip Tag, Show Contents_ (default): Removes the unknown tag, but continues trying to render the contents. This is how Sandcastle behaves.
    * _Render Contents_: Attempts to render the tag contents as HTML. This option will allow you to use HTML to format documentation. This is how NDoc behaves. Note that since tags are passed directly through to the preview browser window, if the tag is not a recognized HTML tag and isn't recognized as a special documentation tag (as selected in the "Documentation Tag Compatibility" option), this may end up hiding the contents of unrecognized tags inadvertently.
    * _Highlight Tag And Contents_: Displays the actual unrecognized tag and its contents with a highlight behind it.  Allows you to see which tags are not specifically recognized documentation tags.  HTML tags, not being documentation tags, will also be highlighted as "unrecognized."
    * _Hide Tag And Contents_: Removes the unknown tag and everything inside it.
  * *Formatting Options*:
    * _Replace "code" tabs with spaces_: Allows you to preview "code" blocks with spaces in place of tabs.  This is default NDoc 1.3 behavior but isn't inherently supported by Sandcastle.
    * _Remove duplicate `<see cref>` links_: Removes "link clutter" by only linking to the first unique `<see cref>` in a doc section (`<summary>`, `<remarks>`, etc.). Duplicate `<see cref>` links will be made bold rather than being links.  This is default NDoc 1.3 behavior but isn't inherently supported by Sandcastle.
  * *Process `<include>` Tags*:
    * _Don't process `<include />` tags_: Places where `<include />` is used will be shown with some placeholder text. Actual inclusion will not occur.
    * _Process and allow absolute file paths only_: Process `<include />` tags and actually include the documentation, but only if the path to the included XML doc is absolute. Relative paths will fail.
    * _Process, allow relative/absolute file paths_: Process `<include />` tags and actually include the documentation. Allow both absolute paths and relative paths. ("Relative" means "relative to the source code document location.")
  * *Toolbar Visibility*: Show or hide the toolbar that appears in the CR_Documentor preview window.
  * *Preview Style*: Choose the style of the documentation preview. Choices include classic MSDN/NDoc 1.3 style and Sandcastle "Prototype" style (default).
  * *Preview Web Server Port*: If running the internal preview web server on the default port doesn't work for you, you can change the port it listens on.

= Setting Up Hotkeys =
Some actions that CR_Documentor has are also available through assignable hotkeys. When you install CR_Documentor they become available through the IDE Shortcuts configuration window.

  * In Visual Studio .NET, select the "!DevExpress" menu, then "Options."
  * In the tree-view on the left, find the "IDE" folder.
  * Inside the "IDE" folder, select "Shortcuts." The list of shortcuts currently assigned to DXCore actions is displayed.


CR_Documentor actions you can bind to shortcuts (these are also accessible via the CR_Documentor context menu):
  * *Collapse XML Doc Comments* - Collapses the XML documentation comment blocks in a source file.
  * *Expand XML Doc Comments* - Expands the XML documentation comment blocks in a source file.
  * *Toggle CR_Documentor Window* - Shows/hides the CR_Documentor tool window.
  * *XML Encode Selection* - Encodes special XML characters in the active selection for inclusion in XML.
  * *Convert Selection to XML Doc Comment* - Converts the active whole line (single or multiple lines) selection into an XML doc comment block.

http://cr-documentor.googlecode.com/svn/site/screenshots/shortcut_dialog.png

To create a new shortcut, click the "New Shortcut" icon at the top of the "Shortcuts" dialog. From there, you can set up the hotkey you want to fire off the shortcut as well as an optional context in which the shortcut applies. For example, a shortcut related to formatting code isn't applicable when you're in a visual designer, so you could set the context up to only allow the shortcut to run when the code editor is active.