#summary Known issues and potential workarounds.
#labels Phase-Support

= Introduction =

There are a few known issues with CR_Documentor. Many have workarounds, but some are with external systems CR_Documentor can't control. Those items that are planned to be fixed should be filed in the [http://code.google.com/p/cr-documentor/issues/list issue tracker] and/or are on the ProductRoadmap. Also check the FrequentlyAskedQuestions page if you find you're having trouble.

=CR_Documentor doesn't appear when run as a standard user in Vista.=
The internal web server in CR_Documentor uses System.Net.!HttpListener which is only allowed to start up and handle requests if you're an administrator. While there's no way to "get around the security," an admin user can grant permissions to non-admin users to enable this to function. Issue #10 has been filed on this. We'll probably pop up a message explaining the issue and what can be done on the user's side to fix it.

*Solution: Get an administrative user to grant you permissions.* CR_Documentor listens to port 11235 so that's what you need to grant permissions to. Here's info on [http://blogs.msdn.com/drnick/archive/2006/10/16/configuring-http-for-windows-vista.aspx setting up Vista using netsh.exe] and here's info on [http://msdn.microsoft.com/en-us/library/ms733768.aspx Windows XP and 2003 using httpcfg.exe].

=The CR_Documentor window may not update as "real-time" as you would expect.=
This is because it relies on the DXCore parser, which only updates during editor "idle time," and only under certain settings.  That's why there's no manual "refresh" option - what you see in CR_Documentor is always the latest that has been made available for preview.  There are two possible workarounds to get an updated view:
  * *Workaround 1: Save the document.* This causes DXCore to re-parse the document and provide a new set of information to CR_Documentor, which will update the preview.
  * *Workaround 2: Change the frequency of document parsing.* If you work with large documents (or a lot of small documents) simultaneously, this may slow things down a little, but it will provide more frequent updates in the preview window and with other DXCore plugins.  To do this:
    # In Visual Studio, from the !DevExpress menu, select "Options."
    # In the bottom-left corner of the Options window, make sure "Expert" is selected.
    # Find the "Core" folder in the left-hand treeview, at the top.
    # Select the "Parsing" node of the "Core" folder.
    # Set the "Parsing" option to "Incremental" or "Full." Automatic parsing doesn't update often enough. ("Full" may slow things down a bit but is a more thorough parse.)
    # Set the "Line change commit idle time" value to 250.
    # Set the "Idle time after a change" value to 1000.
    # Click OK to apply the changes and close the Options window. You should now see updates to the CR_Documentor window after approximately one second of editor idle time.

=The "code" tag's "escaped" attribute doesn't properly handle whitespace.=
Rather than use the "escaped" attribute, you can enclose the text in a CDATA tag.  CDATA whitespace is properly handled.  The "escaped" attribute is not supported by Sandcastle - it is an NDoc 1.3 specific feature.

=The context menu templates may not insert/embed as expected if you have word wrap turned on in the Visual Studio editor.=
This is a DXCore issue and nothing CR_Documentor can fix.  If you are using word wrap in Visual Studio and find the templates aren't working right, turn off word wrap.

=The CR_Documentor window may not display, and when looking in the DXCore error logs, you see an exception (System.Reflection.!TargetInvocationException or System.!MissingMethodException).=
This generally means you don't have the minimum required version of DXCore installed - you need to upgrade.